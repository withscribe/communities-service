type Query {
  communityByName(name: String!): [Community!]!
  communityById(id: ID!): Community
  communities: [Community!]!
  membersCommunities(communitiesIds: [ID!]!): [Community!]!
}

type Mutation {
  createCommunity(name: String!, description: String, privacy: Privacy): Community
  updateCommunity(id: ID!, name: String, description: String, privacy: Privacy): Community
  deleteCommunity(id: ID!): Community
  addStoryToCommunity(id: ID!, storyId: ID!): Community
  removeStoryFromCommunity(id: ID!, storyId: ID!): Community
  setMemberToCommunity(id: ID!, profileId: ID!): Community
  inviteMemberToCommunity(id: ID!, profileId: ID!): Community
}


type Community {
  id: ID!
  ownerId: ID!
  moderatorId: ID!
  name: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  membersIds: [ID]
  bannedMembersIds: [ID]
  privacy: Privacy
}

enum Privacy {
  PUBLIC
  PRIVATE
  INVITEONLY
}

# used to resolve Prisma DateTime type
scalar DateTime